---
- name: check if user exists
  command: "test -e {{jenkins_home}}/.jenkins/users/{{jenkins_control_user}}/config.xml"
  register: jenkins_user
  ignore_errors: true
  changed_when: false
- name: install pre plugin
  command: "java -jar {{jenkins_home}}/jenkins-cli.jar -s http://localhost:7070/{{jenkins_prefix}} install-plugin {{item}}"
  args:
    creates: "{{jenkins_home}}/.jenkins/plugins/{{item}}.jpi"
  with_items: jenkins_pre_plugins
- name: restart jenkins once
  command: monit restart jenkins
  when: jenkins_user.rc == 1
- include: "wait_for.yml"
  when: jenkins_user.rc == 1
- name: copy jenkins security groovy
  copy:
    src: "jenkins_security.groovy"
    dest: "{{jenkins_home}}"
    owner: jenkins
    group: jenkins
    mode: 0750
  register: jenkins_security_groovy
- name: write jenkins security config
  template:
    src: "jenkins_security.json"
    dest: "{{jenkins_home}}/jenkins_security.json"
    owner: jenkins
    group: jenkins
    mode: 0660
  register: jenkins_security_config
- name: secure jenkins
  command: "java -jar {{jenkins_home}}/jenkins-cli.jar -s http://localhost:7070/{{jenkins_prefix}} groovy {{jenkins_home}}/jenkins_security.groovy '{{jenkins_home}}/jenkins_security.json'"
  when: ( jenkins_security_config.changed or jenkins_security_groovy.changed ) and ( not jenkins_needs_auth|default(jenkins_auth != "none") or jenkins_user.rc == 1 )
  notify: restart jenkins
- include: auth_check.yml
- name: secure jenkins
  command: "java -jar {{jenkins_home}}/jenkins-cli.jar -s http://localhost:7070/{{jenkins_prefix}} -i {{jenkins_home}}/.ssh/id_rsa groovy {{jenkins_home}}/jenkins_security.groovy '{{jenkins_home}}/jenkins_security.json'"
  when: ( jenkins_security_config.changed or jenkins_security_groovy.changed ) and ( jenkins_user.rc == 0 and jenkins_needs_auth|default(jenkins_auth != "none") )
  notify: restart jenkins
- meta: flush_handlers
- include: auth_check.yml
- name: install plugins
  command: "java -jar {{jenkins_home}}/jenkins-cli.jar -s http://localhost:7070/{{jenkins_prefix}} -i {{jenkins_home}}/.ssh/id_rsa install-plugin {{item}}"
  args:
    creates: "{{jenkins_home}}/.jenkins/plugins/{{item}}.jpi"
  with_items: jenkins_plugins
  when: jenkins_needs_auth|default(jenkins_auth != 'none')
  notify: restart jenkins
- name: install plugins
  command: "java -jar {{jenkins_home}}/jenkins-cli.jar -s http://localhost:7070/{{jenkins_prefix}} install-plugin {{item}}"
  args:
    creates: "{{jenkins_home}}/.jenkins/plugins/{{item}}.jpi"
  with_items: jenkins_plugins
  when: not jenkins_needs_auth|default(jenkins_auth != 'none')
  notify: restart jenkins
- name: restart jenkins once
  command: monit restart jenkins
  when: jenkins_user.rc == 1
- include: "wait_for.yml"
  when: jenkins_user.rc == 1
- name: write jenkins base groovy
  copy:
    src: "jenkins_config.groovy"
    dest: "{{jenkins_home}}/jenkins_config.groovy"
    owner: jenkins
    group: jenkins
    mode: 0660
  register: jenkins_base_groovy
- name: write jenkins base config
  template:
    src: "jenkins_config.json"
    dest: "{{jenkins_home}}/jenkins_config.json"
    owner: jenkins
    group: jenkins
    mode: 0660
  register: jenkins_base_config
- name: configure base jenkins
  command: "java -jar {{jenkins_home}}/jenkins-cli.jar -s http://localhost:7070/{{jenkins_prefix}} -i {{jenkins_home}}/.ssh/id_rsa groovy {{jenkins_home}}/jenkins_config.groovy '{{jenkins_home}}/jenkins_config.json'"
  when: ( jenkins_base_config.changed or jenkins_base_groovy.changed ) and jenkins_needs_auth|default(jenkins_auth != "none")
- name: configure base jenkins
  command: "java -jar {{jenkins_home}}/jenkins-cli.jar -s http://localhost:7070/{{jenkins_prefix}} groovy {{jenkins_home}}/jenkins_config.groovy '{{jenkins_home}}/jenkins_config.json'"
  when: ( jenkins_base_config.changed or jenkins_base_groovy.changed ) and not jenkins_needs_auth|default(jenkins_auth != "none")
